<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo 博客搭建和使用教程(Windows)</title>
    <link href="/2025/04/16/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-Windows/"/>
    <url>/2025/04/16/Hexo-%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E5%92%8C%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B-Windows/</url>
    
    <content type="html"><![CDATA[<p><strong>写在前面</strong></p><p>本文旨在使用 Hexo 博客框架搭建并部署到<a href="https://github.com/">GitHub</a>，免费搭建一个属于自己的博客网站。</p><hr><p>Hexo 介绍：</p><blockquote><p><strong>Hexo</strong> 是一个快速、简洁且高效的静态博客框架，基于 <strong>Node.js</strong> 开发。它使用 <strong>Markdown</strong> 编写文章，并生成静态 HTML 文件，可以轻松部署到 <strong>GitHub Pages</strong>、<strong>Vercel</strong>、<strong>Netlify</strong> 等平台。</p></blockquote><p>Hexo 官方中文网站：<a href="https://hexo.io/zh-cn/">Hexo</a></p><h2 id="第一章-前期准备"><a href="#第一章-前期准备" class="headerlink" title="第一章 前期准备"></a>第一章 前期准备</h2><h3 id="1-1-安装前所需环境"><a href="#1-1-安装前所需环境" class="headerlink" title="1.1 安装前所需环境"></a>1.1 安装前所需环境</h3><p>安装 Hexo 之前，需要确保您的PC中已经安装以下工具：</p><ul><li>Node.js [<a href="https://nodejs.org/zh-cn">Node.js 官方网站</a>]</li><li>Git [<a href="git-scm.com">Git官方网站</a>]</li></ul><p>如果您的电脑已经具备所需工具，那么您可以直接进入第二章开始安装 Hexo 了。</p><p>如果您还未安装这两款工具，可以点击以下教程链接进行安装，也可以自行搜索教程进行安装。</p><ul><li><a href="https://blog.csdn.net/WHF__/article/details/129362462">Node.js安装教程</a></li><li><a href="https://blog.csdn.net/mukes/article/details/115693833">Git安装教程</a></li></ul><p>当您完成安装 Hexo 所需的环境之后，就可以开始安装 Hexo 了</p><h2 id="第二章-安装-Hexo"><a href="#第二章-安装-Hexo" class="headerlink" title="第二章 安装 Hexo"></a>第二章 安装 Hexo</h2><h3 id="2-1-安装-Hexo"><a href="#2-1-安装-Hexo" class="headerlink" title="2.1 安装 Hexo"></a>2.1 安装 Hexo</h3><ul><li><p>命令：<code>npm install -g hexo-cli </code></p><p>说明：-g 表示全局安装，hexo-cli 为所安装的包</p></li><li><p>安装后验证：在 cmd 中输入命令<code>hexo -v</code>，可查看 Hexo 版本</p></li></ul><p><img src="/../images/%E6%9F%A5%E7%9C%8BHexo%E7%89%88%E6%9C%AC.png" alt="查看 Hexo 版本"></p><h3 id="2-2-Node-js-版本限制"><a href="#2-2-Node-js-版本限制" class="headerlink" title="2.2 Node.js 版本限制"></a>2.2 Node.js 版本限制</h3><p>如果你坚持使用旧的 Node.js，你可以考虑安装 Hexo 的过去版本。</p><p>请注意，我们不提供对过去版本 Hexo 的错误修复。</p><p>我们强烈建议永远安装 <a href="https://www.npmjs.com/package/hexo?activeTab=versions">最新版本</a> 的 Hexo，以及 <a href="https://hexo.io/zh-cn/docs/#%E5%AE%89%E8%A3%85%E5%89%8D%E6%8F%90">推荐的 Node.js 版本</a>。</p><table><thead><tr><th align="left">Hexo 版本</th><th align="left">最低版本 (Node.js 版本)</th><th align="left">最高版本 (Node.js 版本)</th></tr></thead><tbody><tr><td align="left">7.0+</td><td align="left">14.0.0</td><td align="left">latest</td></tr><tr><td align="left">6.2+</td><td align="left">12.13.0</td><td align="left">latest</td></tr><tr><td align="left">6.0+</td><td align="left">12.13.0</td><td align="left">18.5.0</td></tr><tr><td align="left">5.0+</td><td align="left">10.13.0</td><td align="left">12.0.0</td></tr><tr><td align="left">4.1 - 4.2</td><td align="left">8.10</td><td align="left">10.0.0</td></tr><tr><td align="left">4.0</td><td align="left">8.6</td><td align="left">8.10.0</td></tr><tr><td align="left">3.3 - 3.9</td><td align="left">6.9</td><td align="left">8.0.0</td></tr><tr><td align="left">3.2 - 3.3</td><td align="left">0.12</td><td align="left">未知</td></tr><tr><td align="left">3.0 - 3.1</td><td align="left">0.10 或 iojs</td><td align="left">未知</td></tr><tr><td align="left">0.0.1 - 2.8</td><td align="left">0.10</td><td align="left">未知</td></tr></tbody></table><ul><li>注意事项:<br>注册的邮箱一定要验证，否则不会成功;<br>仓库名字必须是：<a href="http://username.github.io,其中/">http://username.github.io，其中</a> username 是你的用户名;<br>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久</li></ul><h2 id="第三章-配置-GitHub"><a href="#第三章-配置-GitHub" class="headerlink" title="第三章 配置 GitHub"></a>第三章 配置 GitHub</h2><p>如果你还没有 GitHub 账户，需要注册一个 GitHub 账户。</p><h3 id="3-1-在-GitHub-上创建仓库"><a href="#3-1-在-GitHub-上创建仓库" class="headerlink" title="3.1 在 GitHub 上创建仓库"></a>3.1 在 GitHub 上创建仓库</h3><ul><li>新建一个名为: <a href="http://username.github.io/">http://username.github.io</a> 的仓库(username 为您的 Github 用户名)</li><li>比如，如果您的 github 用户名是 test，那么您就新建名为 <a href="http://test.github.io/">http://test.github.io</a> 的仓库（必须是您的用户名，其它名称无效），将来你的网站访问地址就是 <a href="https://test.github.io/">https://test.github.io</a> 了。由此可见，每一个 github 账户最多只能创建一个这样可以直接使用域名访问的仓库。</li></ul><p><img src="/../images/%E5%88%9B%E5%BB%BA%E4%BB%93%E5%BA%93.png" alt="创建仓库"></p><ul><li>注意事项:<br>注册的邮箱一定要验证，否则不会成功;<br>仓库名字必须是：<a href="http://username.github.io,其中/">http://username.github.io，其中</a> username 是你的用户名;<br>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久</li></ul><h3 id="3-2-配置-SSH-免密登录"><a href="#3-2-配置-SSH-免密登录" class="headerlink" title="3.2 配置 SSH 免密登录"></a>3.2 配置 SSH 免密登录</h3><p>为什么要配置这个呢？因为您提交代码肯定要拥有您的 GitHub 权限才可以，但是直接使用用户名和密码不太安全，所以我们使用 ssh key 来解决本地和服务器的连接问题。</p><p><strong>注:</strong> 如果您已经配置过 SSH，可跳过此步骤</p><h4 id="生成-SSH-密钥"><a href="#生成-SSH-密钥" class="headerlink" title="生成 SSH 密钥"></a><strong>生成 SSH 密钥</strong></h4><p>输入以下命令来生成 SSH 密钥，将示例中使用的电子邮件替换为 GitHub 电子邮件地址：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">ssh-keygen -t ed25519 -C <span class="hljs-string">&quot;your_email@example.com&quot;</span><br></code></pre></td></tr></table></figure><p>遇到提示信息可以一路回车。</p><p>现在你已经生成了 SSH 密钥对，你可以在C:\Users\您的用户名\ .ssh文件夹，打开这个文件夹，找到 .ssh\id_ed25519.pub 文件，记事本打开并复制里面的内容</p><h4 id="将-SSH-密钥添加到-Github"><a href="#将-SSH-密钥添加到-Github" class="headerlink" title="将 SSH 密钥添加到 Github"></a>将 SSH 密钥添加到 Github</h4><p>浏览器打开 Github，点击个人头像 –&gt; 点击 <code>Settings</code> –&gt; 点击左边导航栏的 <code>SSH and GPG keys</code> –&gt; 点击靠近右上角的 <code>New SSH key</code>。</p><p><code>Key type</code> 选择 <code>Authentication Key</code>，随便起一个 Tittle，复制你刚刚生成的 <code>id_ed25519.pub</code> 内容到 <code>Key</code> 中，点击 <code>Add SSH key</code> 保存。</p><p><img src="/../images/AddSSHKey.png" alt="将 SSlH 密钥添加到 Github"></p><h4 id="检测是否设置成功"><a href="#检测是否设置成功" class="headerlink" title="检测是否设置成功:"></a>检测是否设置成功:</h4><p>输入命令: <code>ssh -T git@github.com</code></p><p><img src="/../images/%E6%A3%80%E6%B5%8BSSH%E8%AE%BE%E7%BD%AE%E6%98%AF%E5%90%A6%E6%88%90%E5%8A%9F.png" alt="检测SSH设置是否成功"></p><p>看到以上信息说明 SSH 已配置成功!</p><h4 id="设置您的用户名和邮箱"><a href="#设置您的用户名和邮箱" class="headerlink" title="设置您的用户名和邮箱"></a>设置您的用户名和邮箱</h4><p><strong>输入以下命令设置用户名和邮箱</strong></p><p>命令: <code>git config --global user.name &quot;您的 Github username&quot;</code> [^注意是 username, 而非昵称]</p><p>命令: <code>git config --global user.email &quot;xxx@qq.com&quot;</code>  [^填写您的 github 注册邮箱]</p><p><strong>输入以下命令查看设置的用户名和邮箱</strong></p><p>输入<code>git config --global user.name</code>可以查看自己设置的用户名</p><p>输入<code>git config --global user.email</code>可以查看自己设置的邮箱</p><p>至此，您已经成功配置好了 GitHub，接下来开始搭建个人博客吧！</p><h2 id="第四章-使用-Hexo-搭建博客"><a href="#第四章-使用-Hexo-搭建博客" class="headerlink" title="第四章 使用 Hexo 搭建博客"></a>第四章 使用 Hexo 搭建博客</h2><h3 id="4-1-初始化"><a href="#4-1-初始化" class="headerlink" title="4.1 初始化"></a>4.1 初始化</h3><ol><li>在电脑的某个磁盘或路径新建一个名为 Hexo的文件夹(名字可以随便取)，比如我的是 D:\Code\Hexo，由于这个文件夹将来就作为您存放代码的地方，所以最好不要随便放。</li><li>在您创建的文件夹下右键打开 Git Bash Here，输入命令: <code>hexo init</code> 进行初始化</li></ol><p><img src="/../images/%E5%88%9D%E5%A7%8B%E5%8C%96Hexo.png" alt="初始化Hexo"></p><ul><li>hexo 会自动下载一些文件到这个目录，目录结构如下图:</li></ul><p><img src="/../images/Hexo%E7%9B%AE%E5%BD%95%E7%BB%93%E6%9E%84.png" alt="Hexo目录结构"></p><ol start="3"><li>执行命令: <code>hexo g</code> 会在 public 文件夹下生成相关的 html 文件。</li><li>执行命令: <code>hexo s</code> 可以开启本地预览服务，打开浏览器访问 <a href="http://localhost:4000/">http://localhost:4000</a> 即可看到博客内容</li></ol><h3 id="4-2-将博客部署到-GitHub"><a href="#4-2-将博客部署到-GitHub" class="headerlink" title="4.2 将博客部署到 GitHub"></a>4.2 <strong>将博客部署到 GitHub</strong></h3><ol><li>在 Hexo 根目录下安装 hexo-deployer-git 插件</li></ol><ul><li>命令: <code>npm install hexo-deployer-git --save</code></li></ul><ol start="2"><li>编辑 Hexo  根目录下的 _config.yml 文件，在文件末尾添加如下内容:</li></ol><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">deploy:</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">git</span><br>  <span class="hljs-attr">repository:</span> <span class="hljs-string">git@github.com:username/username.github.io.git</span><br>  <span class="hljs-attr">branch:</span> <span class="hljs-string">master</span><br></code></pre></td></tr></table></figure><ul><li>注意：repository就是上面创建的仓库地址，username为你自己的GitHub用户名。</li></ul><ol start="3"><li>在 Hexo 根目录下，输入命令: <code>hexo d</code> 将本地 blog 推送到 github 远程仓库。</li></ol><p>推送成功后，即可通过 <a href="https://username.github.io/">https://username.github.io/</a>  访问个人博客了！</p><hr><p>参考教程:</p><p><a href="https://zhuanlan.zhihu.com/p/547520780">2022 Hexo 博客搭建和使用教程(Windows)</a></p>]]></content>
    
    
    <categories>
      
      <category>教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2025/04/16/hello-world/"/>
    <url>/2025/04/16/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
